---

# Step 2.1 Installerer docker og avhengiheter
  - hosts: all
    become: true
    tasks:
#   - name: Install packages that allow apt to be used over HTTPS
#     apt:
#       name: "{{ packages }}"
#       state: present
#       update_cache: yes
#     vars:
#       packages:
#       - apt-transport-https
#       - ca-certificates
#       - curl
#       - gnupg-agent
#       - software-properties-common

#   - name: Add an apt signing key for Docker
#     apt_key:
#       url: https://download.docker.com/linux/ubuntu/gpg
#       state: present

#   - name: Add apt repository for stable version
#     apt_repository:
#       repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
#       state: present

#   - name: Install docker and its dependecies
#     apt: 
#       name: "{{ packages }}"
#       state: present
#       update_cache: yes
#     vars:
#       packages:
#       - docker-ce 
#       - docker-ce-cli 
#       - containerd.io
#     notify:
#       - docker status

#   - name: Add vagrant user to docker group
#     user:
#       name: vagrant
#       group: docker

# # Step 2.2 Kublet starter ikke vis systemet har swap enabled
#   - name: Remove swapfile from /etc/fstab
#     mount:
#       name: "{{ item }}"
#       fstype: swap
#       state: absent
#     with_items:
#       - swap
#       - none

#   - name: Disable swap
#     command: swapoff -a
#     when: ansible_swaptotal_mb > 0

# # Step 2.3 Innstallasjon av kublet, kubeadm og kubectl
#   - name: Add an apt signing key for Kubernetes
#     apt_key:
#       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
#       state: present

#   - name: Adding apt repository for Kubernetes
#     apt_repository:
#       repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
#       state: present
#       filename: kubernetes.list

#   - name: Install Kubernetes binaries
#     apt: 
#       name: "{{ packages }}"
#       state: present
#       update_cache: yes
#     vars:
#       packages:
#         - kubelet 
#         - kubeadm 
#         - kubectl

#   - name: Configure node ip
#     lineinfile:
#       path: /etc/default/kubelet
#       line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

#   - name: Restart kubelet
#     service:
#       name: kubelet
#       daemon_reload: yes
#       state: restarted

# 2.3 Starte opp klynga
#  - name: Initialize the Kubernetes cluster using kubeadm
#    command: kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name k8s-master --pod-network-cidr=192.168.0.0/16

# 2.4 Gi vagrant bruker tilgang til K8 Klynga
#  - name: Setup kubeconfig for vagrant user
#    command: "{{ item }}"
#    with_items:
#     - mkdir -p /home/vagrant/.kube
#     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
#     - chown vagrant:vagrant /home/vagrant/.kube/config

# Konteiner nettverk og policy engine
#   - name: Install calico pod network
#     become: false
#     command: kubectl create -f https://docs.projectcalico.org/v3.8/getting-started/kubernetes/installation/hosted/calico.yaml

# step 2.6
  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

# step 2.7
#  handlers:
#    - name: docker status
#      service: name=docker state=started

# https://kubernetes.io/blog/2019/03/15/kubernetes-setup-using-ansible-and-vagrant/


